// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗  
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝  
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// -----------------------------------------------
//  
// This file is automatically generated 
// Please do not edit these files manually
// Run the following in the root of the repos:
//
// 		*NIX 		:	./build.sh codegen
// 		Windows 	:	build.bat codegen
//
// -----------------------------------------------
// ReSharper disable RedundantUsingDirective
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Linq.Expressions;
using System.Runtime.Serialization;
using Elasticsearch.Net7;
using Elasticsearch.Net7.Utf8Json;
using Elasticsearch.Net7.Specification.AsyncSearchApi;
using Elasticsearch.Net7.Specification.AutoscalingApi;
using Elasticsearch.Net7.Specification.CatApi;
using Elasticsearch.Net7.Specification.ClusterApi;
using Elasticsearch.Net7.Specification.CrossClusterReplicationApi;
using Elasticsearch.Net7.Specification.DanglingIndicesApi;
using Elasticsearch.Net7.Specification.EnrichApi;
using Elasticsearch.Net7.Specification.EqlApi;
using Elasticsearch.Net7.Specification.FeaturesApi;
using Elasticsearch.Net7.Specification.FleetApi;
using Elasticsearch.Net7.Specification.GraphApi;
using Elasticsearch.Net7.Specification.IndexLifecycleManagementApi;
using Elasticsearch.Net7.Specification.IndicesApi;
using Elasticsearch.Net7.Specification.IngestApi;
using Elasticsearch.Net7.Specification.LicenseApi;
using Elasticsearch.Net7.Specification.LogstashApi;
using Elasticsearch.Net7.Specification.MachineLearningApi;
using Elasticsearch.Net7.Specification.MigrationApi;
using Elasticsearch.Net7.Specification.NodesApi;
using Elasticsearch.Net7.Specification.RollupApi;
using Elasticsearch.Net7.Specification.SearchableSnapshotsApi;
using Elasticsearch.Net7.Specification.SecurityApi;
using Elasticsearch.Net7.Specification.ShutdownApi;
using Elasticsearch.Net7.Specification.SnapshotApi;
using Elasticsearch.Net7.Specification.SnapshotLifecycleManagementApi;
using Elasticsearch.Net7.Specification.SqlApi;
using Elasticsearch.Net7.Specification.TasksApi;
using Elasticsearch.Net7.Specification.TextStructureApi;
using Elasticsearch.Net7.Specification.TransformApi;
using Elasticsearch.Net7.Specification.WatcherApi;
using Elasticsearch.Net7.Specification.XPackApi;

// ReSharper disable UnusedTypeParameter
namespace Nest7
{
	public abstract partial class PlainRequestBase<TParameters>
	{
		///<summary>Include the stack trace of returned errors.</summary>
		public bool? ErrorTrace
		{
			get => Q<bool? >("error_trace");
			set => Q("error_trace", value);
		}

		///<summary>
		/// A comma-separated list of filters used to reduce the response.
		/// <para>Use of response filtering can result in a response from Elasticsearch
		/// that cannot be correctly deserialized to the respective response type for the request.
		/// In such situations, use the low level client to issue the request and handle response deserialization</para>
		///</summary>
		public string[] FilterPath
		{
			get => Q<string[]>("filter_path");
			set => Q("filter_path", value);
		}

		///<summary>Return human readable values for statistics.</summary>
		public bool? Human
		{
			get => Q<bool? >("human");
			set => Q("human", value);
		}

		///<summary>Pretty format the returned JSON response.</summary>
		public bool? Pretty
		{
			get => Q<bool? >("pretty");
			set => Q("pretty", value);
		}

		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public string SourceQueryString
		{
			get => Q<string>("source");
			set => Q("source", value);
		}
	}
}